app:
  title: ITSyndicate developer platform
  baseUrl: http://localhost:3000
  support:
    url: https://${GITLAB_HOST}/backstage/platform/-/issues # Used by common ErrorPage
    items: # Used by common SupportButton component
      - title: Feedback form
        icon: unstarred
        links:
          - url: https://${GITLAB_HOST}/backstage/platform/-/issues/new?issue[title]=Feedback:&issue[description]=Content:+%0A%0AAdmin+block:%0A%0A%2Flabel%20~%22Feedback%22%20
            title: Create feedback
      - title: Report issue
        icon: warning
        links:
          - url: https://${GITLAB_HOST}/backstage/platform/-/issues/new?issue[title]=Issue:&issue[description]=Describe+your+issue:+%0APage:+%0A%0AAdmin+block:%0A%0A%2Flabel%20~%22type%3A%3AUser%20Story%22%20%0A%2Fassign%20%40volodymyr.v
            title: Create issue


  name: ITSyndicate

backend:
  baseUrl: http://localhost:7007
  plugins:
    aws-ecs-clusters:
      baseUrl: http://localhost:7007/api/aws-ecs-clusters
    aws-cloudwatch:
      baseUrl: http://localhost:7007/api/aws-cloudwatch
      region: us-east-1
  listen:
    port: 7007
#    port: 7007
    # Uncomment the following host directive to bind to specific interfaces
    #host: 127.0.0.1
  
  csp:
    upgrade-insecure-requests: false
    connect-src: ["'self'", 'http:', 'https:']
    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
    # Default Helmet Content-Security-Policy values can be removed by setting the key to false
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  # This is for local development only, it is not recommended to use this in production
  # The production database configuration is stored in app-config.production.yaml
  platformRegion: us-east-1
  database:
    client: better-sqlite3
    connection: ':memory:'
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir
integrations:
  gitlab:
    - host: ${GITLAB_HOST}
      token: ${GITLAB_TOKEN}
      baseUrl: https://${GITLAB_HOST}  
      apiBaseUrl: https://${GITLAB_HOST}/api/v4
grafana:
  # Publicly accessible domain
  domain: localhost

  # Is unified alerting enabled in Grafana?
  # See: https://grafana.com/blog/2021/06/14/the-new-unified-alerting-system-for-grafana-everything-you-need-to-know/
  # Optional. Default: false
  unifiedAlerting: false
proxy:

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: local # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
auth:
  environment: development
  providers:
    guest: {}

scaffolder:
  # see https://backstage.io/docs/features/software-templates/configuration for software template options
  defaultAuthor:
    name: ITSyndicate
    email: itsyndicate@gmail.com
aws: 
  s3:
    bucketName: example
  regions: 
  - us-east-1
  - eu-west-1
  region: us-east-1
catalog:
  readonly: true
  rules:
    - allow: [Component, API, System, Domain, Resource, Location, User, Group]
  locations:
    - type: url
      target: https://gitlab.com/itsyndicate-platform/backstage/-/blob/main/examples/org.yaml
  providers:
    backstage:
      enabled: false
      schedule:
        frequency: { hours: 12 }
        timeout: { minutes: 30 }
    gitlab:
      GitLabProvider:
        host: ${GITLAB_HOST} # Identifies one of the hosts set up in the integrations
        orgEnabled: true
        group: itsyndicate-platform
        restrictUsersToGroup: true
        relations:
          - INHERITED
          - DESCENDANTS
          - SHARED_FROM_GROUPS
        includeUsersWithoutSeat: true
        schedule: # Same options as in SchedulerServiceTaskScheduleDefinition. Optional for the Legacy Backend System.
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 1 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 1 }
    
kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters: []

# see https://backstage.io/docs/permissions/getting-started for more on the permission framework
permission:
  enabled: true
  rbac:
    pluginsWithPermission:
      - catalog
      - kubernetes
      - catalog
      - jenkins
      - rbac
      - scaffolder
    admin:
      superUsers:
        - name: group:default/guests
      users:
        - name: group:default/backstage
        - name: group:default/guests
events:
  http:
    topics:
      - gitlab
highlights:
  gitlab:
    token: ${GITLAB_TOKEN}
    apiBaseUrl: https://${GITLAB_HOST}/api/v4

costInsights:
  engineerCost: 240000     
  baseCurrency:
    locale: en-US
    options:
      currency: USD
      minimumFractionDigits: 3
  products:
    same:
      name: Same ## required
      icon: compute
  metrics:
    metricA:
      name: Metric A ## required
      default: true
  groups:
    - name: backstage
      displayName: Engineering
